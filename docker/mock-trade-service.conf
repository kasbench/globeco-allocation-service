server {
    listen 8082;
    server_name localhost;

    # Health check endpoint
    location /health {
        return 200 '{"status":"healthy"}';
        add_header Content-Type application/json;
    }

    # Mock Trade Service API
    location /api/v2/executions {
        # Set CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";

        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Return mock execution data based on executionServiceId parameter
        set $execution_id $arg_executionServiceId;
        
        if ($execution_id = "123") {
            return 200 '{"executions":[{"id":123,"portfolioId":"PORTFOLIO123456789012","tradeDate":"2024-01-15"}]}';
        }
        
        if ($execution_id = "124") {
            return 200 '{"executions":[{"id":124,"portfolioId":"PORTFOLIO987654321098","tradeDate":"2024-01-15"}]}';
        }

        # Default empty response
        return 200 '{"executions":[]}';
        add_header Content-Type application/json;
    }

    # Catch-all for other API endpoints
    location /api/ {
        return 404 '{"error":"Not Found","message":"Mock endpoint not implemented"}';
        add_header Content-Type application/json;
    }

    # Default location
    location / {
        return 200 '{"service":"mock-trade-service","version":"1.0.0","status":"running"}';
        add_header Content-Type application/json;
    }
} 