apiVersion: apps/v1
kind: Deployment
metadata:
  name: globeco-allocation-service
  labels:
    app: globeco-allocation-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: globeco-allocation-service
  template:
    metadata:
      labels:
        app: globeco-allocation-service
        version: v1
    spec:
      containers:
      - name: allocation-service
        image: globeco-allocation-service:latest
        ports:
        - containerPort: 8089
          name: http
        env:
        - name: PORT
          value: "8089"
        - name: LOG_LEVEL
          value: "info"
        - name: DATABASE_HOST
          value: "globeco-allocation-service-postgresql"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_NAME
          value: "postgres"
        - name: DATABASE_USER
          value: "postgres"
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: allocation-service-secrets
              key: database-password
        - name: TRADE_SERVICE_URL
          value: "http://globeco-trade-service:8082"
        - name: OUTPUT_DIR
          value: "/usr/local/share/files"
        - name: CLI_COMMAND
          value: "docker run --rm -v /tmp/portfolio-files:/data --network host globeco-portfolio-cli:latest process --file /data/transactions.csv --output-dir /data"
        - name: METRICS_ENABLED
          value: "true"
        - name: TRACING_ENABLED
          value: "true"
        volumeMounts:
        - name: shared-files
          mountPath: /usr/local/share/files
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: shared-files
        persistentVolumeClaim:
          claimName: shared-files-pvc
      securityContext:
        fsGroup: 1001 